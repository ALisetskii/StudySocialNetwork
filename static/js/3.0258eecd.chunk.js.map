{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPostsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","console","log","postsElements","posts","map","p","postsBlock","values","addPost","newPostBody","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.0258eecd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__34CTv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3OJU-\",\"posts\":\"MyPosts_posts__214Vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__28ehv\"};","import React from 'react';\n\n\nclass ProfileStatus extends React.Component {\n\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n\n        this.setState({\n            editMode: true\n        });\n    }\n    deactivateEditMode = () => {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n    }\n    onStatusChange = (e)=>{\n\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.editMode &&\n                <div>\n                    <span onDoubleClick={this.activateEditMode}>\n                        {this.props.status || \"-------\"}</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input\n                        autoFocus={true}\n                        onBlur={this.deactivateEditMode.bind(this)}\n                        value={this.state.status}\n                    onChange={this.onStatusChange}/>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;\n","import React, {useEffect, useState} from 'react';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode,setEditMode] = useState(false);\n    let [status,setStatus] = useState(props.status);\n\n    useEffect(()=>{\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode=()=>{\n        setEditMode(true)\n    }\n\n    const deactivateEditMode=()=>{\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange=(e)=>{\n        setStatus(e.currentTarget.value)\n    }\n\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input\n                    value={status}\n                    autoFocus={true}\n                    onBlur={deactivateEditMode}\n                    onChange={onStatusChange}\n                />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt={''} />\r\n                <ProfileStatusWithHooks status={status}\r\n                               updateStatus={updateStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' alt={''} />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../untils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 =maxLengthCreator(10);\r\n\r\nconst AddNewPostForm=(props)=> {\r\n    return   <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n                    <Field component={Textarea}\r\n                           name='newPostBody'\r\n                           placeholder='Enter your post'\r\n                           validate={[required,maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button >Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst MyPostsFormRedux =  reduxForm({form: 'MyPostsAddNewPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = props => {\r\n\r\n\r\n    console.log('reder my posts')\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <MyPostsFormRedux onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId= this.props.authorizedUserId\n            if (!userId) {\n            this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId)\n\n    }\n\n    render() {\n        //console.log(\"RENDER PROFILE\");\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    })\n\n};\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile,getStatus, updateStatus }),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n"],"sourceRoot":""}