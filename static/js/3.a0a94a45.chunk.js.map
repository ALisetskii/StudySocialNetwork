{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","React","Component","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","value","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","alt","mainPhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPostsFormRedux","Field","component","name","placeholder","validate","required","MyPosts","console","log","postsElements","posts","p","id","postsBlock","values","addPost","newPostBody","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a0a94a45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__34CTv\",\"mainPhoto\":\"ProfileInfo_mainPhoto__91-0S\",\"contact\":\"ProfileInfo_contact__pMYzc\",\"formSummaryError\":\"ProfileInfo_formSummaryError__sqkc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3OJU-\",\"posts\":\"MyPosts_posts__214Vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__28ehv\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n\r\n            <div>\r\n                <b>Status:<b/></b><span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    value={status}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>\r\n                        {this.props.status || \"-------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={this.deactivateEditMode.bind(this)}\r\n                        value={this.state.status}\r\n                        onChange={this.onStatusChange}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n        {error && <div className={s.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b> Full name:</b>\r\n            {createField('Full name', 'fullName', Input, [])}\r\n        </div>\r\n        <div>\r\n            <b> Looking for a job:</b>\r\n            {createField('LookingForaAJob',\r\n                'lookingForaAJob',\r\n                Input, [], {type: 'checkbox'})}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b> My professional skills:</b>\r\n            {createField('My professional skills', 'lookingForAJobDescription', Textarea, [])}\r\n        </div>\r\n\r\n        <div>\r\n            <b> About me:</b>\r\n            {createField('About me', 'aboutMe', Textarea, [])}\r\n        </div>\r\n        <div>\r\n            <b> Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n            return <div className={s.contact} key={key}>\r\n                <b>{key}:{createField(key, 'contacts.' + key, Input, [])}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelector = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large || userPhoto} alt={''}\r\n                 className={s.mainPhoto}/>\r\n            {isOwner && <input type={'file'} onChange={onMainPhotoSelector}/>}\r\n            {editMode ? <ProfileDataForm profile={profile} initialValues={profile} onSubmit={onSubmit}/>\r\n                : <ProfileData profile={profile} isOwner={isOwner}\r\n                               goToEditMode={() => {\r\n                                   setEditMode(true)\r\n                               }}/>}\r\n\r\n\r\n            <ProfileStatusWithHooks status={status}\r\n                                    updateStatus={updateStatus}\r\n            />\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div>\r\n            <b> Full name:</b>{profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b> Looking for a job:</b>{profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b> My professional skills:</b>{profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b> About me:</b>{profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b> Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}:</b>{contactValue ? contactValue : 'none'}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg'\r\n                 alt={''}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../untils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea}\r\n                   name='newPostBody'\r\n                   placeholder='Enter your post'\r\n                   validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({form: 'MyPostsAddNewPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = props => {\r\n\r\n\r\n    console.log('reder my posts')\r\n    let postsElements =\r\n        props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <MyPostsFormRedux onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n\r\n    })\r\n\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}